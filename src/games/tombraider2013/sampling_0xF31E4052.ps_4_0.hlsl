// ---- Created with 3Dmigoto v1.4.1 on Sun Jan 19 11:18:42 2025

cbuffer cb6 : register(b6) {
  int4 g_i2InputSize : packoffset(c0);
  int4 g_i2OutputSize : packoffset(c1);
  float4 DepthToW : packoffset(c2);
  float4 g_vCoCParams : packoffset(c3);
}

SamplerState samplerInputTexture0L_s : register(s1);
Texture2D<float4> mapInputTexture0L : register(t0);
Texture2D<float4> mapInputTexture1P : register(t1);

// 3Dmigoto declarations
#define cmp -

void main(
    float4 v0: SV_POSITION0,
    float4 v1: COLOR0,
    float2 v2: TEXCOORD0,
    out float4 o0: SV_TARGET0) {
  const float4 icb[] = { { 0.710491, 0.703707, 0, 0 },
                         { -0.928918, -0.370287, 0, 0 },
                         { 0.731964, 0.681344, 0, 0 },
                         { 0.427097, -0.904206, 0, 0 },
                         { 0.429236, 0.903192, 0, 0 },
                         { -0.999968, 0.008006, 0, 0 },
                         { -0.889812, 0.456327, 0, 0 },
                         { 0.659050, -0.752100, 0, 0 },
                         { 0.996894, 0.078758, 0, 0 },
                         { 0.975363, -0.220606, 0, 0 },
                         { 0.757239, -0.653138, 0, 0 },
                         { 0.379926, -0.925017, 0, 0 },
                         { -0.957232, -0.289322, 0, 0 },
                         { 0.885485, -0.464668, 0, 0 },
                         { -0.726943, 0.686698, 0, 0 },
                         { -0.920621, 0.390457, 0, 0 },
                         { 0.732435, 0.680837, 0, 0 },
                         { 0.210283, 0.977641, 0, 0 },
                         { -0.198257, 0.980150, 0, 0 },
                         { -0.373270, -0.927723, 0, 0 },
                         { 0.999482, 0.032171, 0, 0 },
                         { -0.402570, 0.915389, 0, 0 },
                         { 0.997633, -0.068771, 0, 0 },
                         { 0.995860, 0.090900, 0, 0 },
                         { -0.780747, 0.624847, 0, 0 },
                         { 0.184445, -0.982843, 0, 0 },
                         { -0.310787, 0.950480, 0, 0 },
                         { -0.032740, -0.999464, 0, 0 },
                         { 0.086333, 0.996266, 0, 0 },
                         { -0.616147, -0.787631, 0, 0 },
                         { -0.128982, 0.991647, 0, 0 },
                         { 0.999362, 0.035710, 0, 0 },
                         { 0.710624, 0.703572, 0, 0 },
                         { -0.545880, 0.837863, 0, 0 },
                         { 0.839608, -0.543193, 0, 0 },
                         { -0.902993, 0.429656, 0, 0 },
                         { 0.532803, -0.846239, 0, 0 },
                         { -0.650858, -0.759200, 0, 0 },
                         { -0.325481, -0.945549, 0, 0 },
                         { -0.637485, -0.770463, 0, 0 },
                         { -0.995287, -0.096968, 0, 0 },
                         { -0.806658, -0.591018, 0, 0 },
                         { -0.944383, 0.328847, 0, 0 },
                         { 0.976587, 0.215121, 0, 0 },
                         { 0.379852, 0.925047, 0, 0 },
                         { 0.884347, -0.466830, 0, 0 },
                         { 0.529144, -0.848532, 0, 0 },
                         { 0.855252, -0.518213, 0, 0 },
                         { 0.888648, 0.458590, 0, 0 },
                         { 0.580155, 0.814506, 0, 0 },
                         { 0.239223, 0.970965, 0, 0 },
                         { -0.983282, -0.182090, 0, 0 },
                         { -0.203888, -0.978994, 0, 0 },
                         { -0.844198, 0.536031, 0, 0 },
                         { 0.929263, 0.369418, 0, 0 },
                         { 0.358143, -0.933667, 0, 0 },
                         { -0.901253, -0.433292, 0, 0 },
                         { 0.790867, 0.611988, 0, 0 },
                         { -0.898445, 0.439085, 0, 0 },
                         { -0.808525, 0.588461, 0, 0 },
                         { 0.318387, 0.947961, 0, 0 },
                         { -0.426950, -0.904275, 0, 0 },
                         { -0.692393, -0.721520, 0, 0 },
                         { -0.676265, 0.736659, 0, 0 },
                         { -0.344567, -0.938762, 0, 0 },
                         { 0.733433, -0.679762, 0, 0 },
                         { -0.380832, -0.924644, 0, 0 },
                         { 0.280121, 0.959965, 0, 0 },
                         { 0.995865, 0.090849, 0, 0 },
                         { 0.951468, -0.307748, 0, 0 },
                         { -0.820930, -0.571029, 0, 0 },
                         { -0.993602, 0.112937, 0, 0 },
                         { -0.992850, -0.119370, 0, 0 },
                         { -0.628784, -0.777580, 0, 0 },
                         { 0.461471, 0.887156, 0, 0 },
                         { -0.825254, 0.564761, 0, 0 },
                         { 0.681203, -0.732095, 0, 0 },
                         { 0.959481, -0.281772, 0, 0 },
                         { 0.462366, -0.886689, 0, 0 },
                         { -0.982149, 0.188106, 0, 0 },
                         { 0.931572, -0.363557, 0, 0 },
                         { -0.758352, 0.651845, 0, 0 },
                         { -0.487438, -0.873157, 0, 0 },
                         { 0.861552, 0.507670, 0, 0 },
                         { -0.912159, 0.409838, 0, 0 },
                         { -0.053744, -0.998555, 0, 0 },
                         { -0.238717, 0.971089, 0, 0 },
                         { -0.222771, -0.974871, 0, 0 },
                         { -0.197745, 0.980253, 0, 0 },
                         { 0.807861, 0.589373, 0, 0 },
                         { 0.627659, -0.778488, 0, 0 },
                         { -0.096511, -0.995332, 0, 0 },
                         { 0.251407, 0.967882, 0, 0 },
                         { -0.293260, 0.956033, 0, 0 },
                         { -0.933335, 0.359006, 0, 0 },
                         { 0.512623, -0.858613, 0, 0 },
                         { 0.984956, -0.172803, 0, 0 },
                         { 0.880901, 0.473301, 0, 0 },
                         { -0.538447, 0.842659, 0, 0 },
                         { -0.350216, 0.936669, 0, 0 },
                         { 0.094865, 0.995490, 0, 0 },
                         { -0.666336, -0.745651, 0, 0 },
                         { 0.804636, -0.593769, 0, 0 },
                         { 0.704390, 0.709813, 0, 0 },
                         { -0.941373, -0.337367, 0, 0 },
                         { -0.128035, -0.991770, 0, 0 },
                         { 0.997987, 0.063413, 0, 0 },
                         { 0.889448, 0.457037, 0, 0 },
                         { 0.085970, 0.996298, 0, 0 },
                         { -0.558246, -0.829675, 0, 0 },
                         { 0.927501, -0.373822, 0, 0 },
                         { -0.742646, -0.669684, 0, 0 },
                         { -0.176973, 0.984216, 0, 0 },
                         { 0.965002, -0.262244, 0, 0 },
                         { -0.967139, 0.254249, 0, 0 },
                         { 0.376475, -0.926427, 0, 0 },
                         { 0.997686, 0.067985, 0, 0 },
                         { -0.962827, -0.270120, 0, 0 },
                         { 0.918771, -0.394791, 0, 0 },
                         { 0.955923, -0.293616, 0, 0 },
                         { -0.835192, -0.549958, 0, 0 },
                         { 0.986247, -0.165277, 0, 0 },
                         { 0.885616, -0.464418, 0, 0 },
                         { 0.858064, -0.513542, 0, 0 },
                         { 0.836776, 0.547545, 0, 0 },
                         { 0.647592, -0.761987, 0, 0 },
                         { -0.140489, 0.990082, 0, 0 },
                         { 0.177041, 0.984204, 0, 0 },
                         { 0.307710, 0.951480, 0, 0 },
                         { -0.525163, 0.851002, 0, 0 },
                         { -0.910432, 0.413659, 0, 0 },
                         { 0.253572, -0.967317, 0, 0 },
                         { -0.754068, -0.656796, 0, 0 },
                         { -0.992462, -0.122552, 0, 0 },
                         { 0.094086, 0.995564, 0, 0 },
                         { -0.349653, 0.936879, 0, 0 },
                         { -0.997243, 0.074212, 0, 0 },
                         { -0.963125, -0.269053, 0, 0 },
                         { -0.982313, -0.187247, 0, 0 },
                         { -0.289677, -0.957125, 0, 0 },
                         { -0.116957, -0.993137, 0, 0 },
                         { 0.231497, 0.972836, 0, 0 },
                         { -0.990413, 0.138137, 0, 0 },
                         { -0.702902, -0.711287, 0, 0 },
                         { 0.528971, 0.848640, 0, 0 },
                         { 0.055213, 0.998475, 0, 0 },
                         { -0.962541, 0.271135, 0, 0 },
                         { -0.011213, 0.999937, 0, 0 },
                         { 0.526693, -0.850056, 0, 0 },
                         { -0.683970, -0.729510, 0, 0 },
                         { 0.453065, -0.891477, 0, 0 },
                         { -0.901665, 0.432435, 0, 0 },
                         { 0.622492, 0.782626, 0, 0 },
                         { -0.762133, 0.647421, 0, 0 },
                         { -0.222631, -0.974903, 0, 0 },
                         { -0.070972, 0.997478, 0, 0 },
                         { -0.243824, -0.969820, 0, 0 },
                         { 0.995355, -0.096277, 0, 0 },
                         { 0.978072, 0.208269, 0, 0 },
                         { -0.352556, -0.935791, 0, 0 },
                         { -0.963946, 0.266097, 0, 0 },
                         { 0.239096, -0.970996, 0, 0 },
                         { 0.708553, -0.705657, 0, 0 },
                         { 0.802703, -0.596379, 0, 0 },
                         { 0.165043, 0.986286, 0, 0 },
                         { 0.596792, 0.802396, 0, 0 },
                         { 0.999852, 0.017220, 0, 0 },
                         { 0.055022, -0.998485, 0, 0 },
                         { -0.170287, -0.985394, 0, 0 },
                         { 0.576363, 0.817194, 0, 0 },
                         { -0.444189, 0.895933, 0, 0 },
                         { -0.979189, 0.202953, 0, 0 },
                         { 0.996376, 0.085055, 0, 0 },
                         { 0.111717, 0.993740, 0, 0 },
                         { 0.179799, 0.983703, 0, 0 },
                         { -0.728363, 0.685191, 0, 0 },
                         { -0.999623, 0.027455, 0, 0 },
                         { -0.292166, 0.956368, 0, 0 },
                         { 0.018078, -0.999837, 0, 0 },
                         { 0.592911, -0.805268, 0, 0 },
                         { -0.829936, 0.557859, 0, 0 },
                         { 0.991595, 0.129378, 0, 0 },
                         { -0.743382, 0.668867, 0, 0 },
                         { -0.904579, -0.426306, 0, 0 },
                         { -0.996582, -0.082612, 0, 0 },
                         { 0.999785, 0.020721, 0, 0 },
                         { -0.599201, -0.800599, 0, 0 },
                         { 0.149476, 0.988765, 0, 0 },
                         { 0.340429, -0.940270, 0, 0 },
                         { 0.986376, -0.164506, 0, 0 },
                         { -0.823350, -0.567534, 0, 0 },
                         { -0.999755, -0.022144, 0, 0 },
                         { -0.998041, -0.062563, 0, 0 },
                         { 0.521545, -0.853224, 0, 0 },
                         { 0.024544, 0.999699, 0, 0 },
                         { 0.936368, -0.351020, 0, 0 },
                         { -0.522461, 0.852663, 0, 0 },
                         { -0.877389, -0.479779, 0, 0 },
                         { -0.817541, 0.575870, 0, 0 },
                         { 0.996631, 0.082017, 0, 0 },
                         { 0.072398, 0.997376, 0, 0 },
                         { -0.323685, -0.946165, 0, 0 },
                         { -0.983423, -0.181326, 0, 0 },
                         { -0.391094, -0.920351, 0, 0 },
                         { -0.349781, 0.936831, 0, 0 },
                         { -0.624564, 0.780974, 0, 0 },
                         { -0.861617, 0.507560, 0, 0 },
                         { 0.847270, -0.531162, 0, 0 },
                         { 0.499839, 0.866118, 0, 0 },
                         { -0.505839, 0.862628, 0, 0 },
                         { 0.098331, -0.995154, 0, 0 },
                         { -0.856267, 0.516534, 0, 0 },
                         { 0.114256, 0.993451, 0, 0 },
                         { 0.412197, 0.911095, 0, 0 },
                         { -0.229440, 0.973323, 0, 0 },
                         { -0.921418, 0.388574, 0, 0 },
                         { -0.827207, 0.561897, 0, 0 },
                         { -0.340117, 0.940383, 0, 0 },
                         { -0.750691, 0.660654, 0, 0 },
                         { 0.185444, 0.982655, 0, 0 },
                         { -0.999995, -0.003006, 0, 0 },
                         { 0.166481, -0.986045, 0, 0 },
                         { 0.957577, -0.288178, 0, 0 },
                         { -0.005864, -0.999983, 0, 0 },
                         { -0.938334, -0.345731, 0, 0 },
                         { 0.424240, -0.905550, 0, 0 },
                         { 0.964573, -0.263816, 0, 0 },
                         { 0.447084, 0.894492, 0, 0 },
                         { 0.996183, -0.087293, 0, 0 },
                         { -0.176941, 0.984222, 0, 0 },
                         { 0.964779, 0.263063, 0, 0 },
                         { 0.863886, -0.503687, 0, 0 },
                         { 0.789601, -0.613620, 0, 0 },
                         { -0.063986, -0.997951, 0, 0 },
                         { -0.760229, -0.649655, 0, 0 },
                         { -0.259189, -0.965827, 0, 0 },
                         { -0.998617, 0.052570, 0, 0 },
                         { -0.324861, -0.945762, 0, 0 },
                         { -0.082972, 0.996552, 0, 0 },
                         { 0.557911, 0.829901, 0, 0 },
                         { -0.850914, -0.525304, 0, 0 },
                         { -0.082438, -0.996596, 0, 0 },
                         { 0.931102, 0.364760, 0, 0 },
                         { -0.983306, 0.181962, 0, 0 },
                         { 0.260700, 0.965420, 0, 0 },
                         { 0.411857, 0.911248, 0, 0 },
                         { -0.136227, 0.990678, 0, 0 },
                         { -0.468390, 0.883522, 0, 0 },
                         { -0.950125, -0.311868, 0, 0 },
                         { 0.365841, -0.930677, 0, 0 },
                         { -0.971807, -0.235777, 0, 0 },
                         { 0.979528, 0.201308, 0, 0 },
                         { 0.341681, 0.939816, 0, 0 },
                         { 0.414273, 0.910153, 0, 0 },
                         { -0.996873, -0.079021, 0, 0 },
                         { -0.971404, 0.237432, 0, 0 },
                         { 0.619840, 0.582960, 0.850900, 0 },
                         { -0.787050, 0.370510, 0.869910, 0 },
                         { 0.414400, -0.227910, 0.472940, 0 },
                         { -0.418540, -0.511720, 0.661090, 0 },
                         { -0.004050, 0.158570, 0.158620, 0 },
                         { -0.209770, 0.454730, 0.500780, 0 },
                         { -0.491010, 0.602150, 0.776960, 0 },
                         { 0.660520, -0.045460, 0.662080, 0 },
                         { -0.135850, -0.559760, 0.576010, 0 },
                         { 0.102950, 0.738560, 0.745700, 0 },
                         { 0.146430, 0.449540, 0.472790, 0 },
                         { -0.785640, 0.554490, 0.961610, 0 },
                         { 0.266970, 0.232860, 0.354260, 0 },
                         { -0.191080, 0.922050, 0.941650, 0 },
                         { -0.563480, -0.236590, 0.611130, 0 },
                         { -0.442270, 0.026960, 0.443090, 0 },
                         { 0.658520, 0.385610, 0.763110, 0 },
                         { -0.302110, -0.707700, 0.769490, 0 },
                         { -0.496290, -0.675280, 0.838040, 0 },
                         { -0.422900, 0.820020, 0.922640, 0 },
                         { -0.717930, -0.478120, 0.862570, 0 },
                         { -0.028730, -0.214010, 0.215930, 0 },
                         { -0.725240, 0.133680, 0.737460, 0 },
                         { 0.409680, -0.477050, 0.628820, 0 },
                         { 0.209700, -0.734570, 0.763920, 0 },
                         { 0.176340, -0.142730, 0.226870, 0 },
                         { -0.066320, -0.996820, 0.999020, 0 },
                         { 0.577460, -0.409770, 0.708080, 0 },
                         { 0.800020, -0.311760, 0.858620, 0 },
                         { 0.285460, 0.783630, 0.834010, 0 },
                         { 0.953450, 0.108390, 0.959590, 0 },
                         { -0.912040, -0.135890, 0.922110, 0 },
                         { -0.309000, -0.222990, 0.381060, 0 },
                         { -0.222290, -0.904070, 0.930990, 0 },
                         { 0.331220, 0.439150, 0.550050, 0 },
                         { 0.582350, -0.715810, 0.922780, 0 },
                         { 0.059310, -0.506470, 0.509940, 0 },
                         { 0.233000, 0.051090, 0.238530, 0 },
                         { 0.069000, -0.855480, 0.858260, 0 },
                         { -0.204770, -0.002280, 0.204780, 0 },
                         { -0.442710, 0.371540, 0.577960, 0 },
                         { -0.830060, -0.300210, 0.882690, 0 },
                         { -0.105250, 0.655550, 0.663940, 0 },
                         { 0.558540, 0.119020, 0.571080, 0 },
                         { 0.243500, -0.334470, 0.413720, 0 },
                         { -0.708220, -0.100710, 0.715340, 0 },
                         { -0.908000, 0.190010, 0.927670, 0 },
                         { 0.231050, -0.937710, 0.965760, 0 },
                         { 0.958950, -0.212430, 0.982200, 0 },
                         { 0.471970, 0.725140, 0.865200, 0 },
                         { 0.212960, 0.948620, 0.972230, 0 },
                         { 0.884740, 0.323910, 0.942170, 0 },
                         { -0.286140, 0.227700, 0.365690, 0 },
                         { 0.004780, 0.917430, 0.917450, 0 },
                         { 0.837340, -0.538470, 0.995530, 0 },
                         { -0.024410, 0.358850, 0.359680, 0 },
                         { -0.621350, 0.736380, 0.963500, 0 },
                         { -0.229600, -0.396690, 0.458350, 0 },
                         { -0.674510, -0.715800, 0.983530, 0 },
                         { -0.008010, -0.030800, 0.031820, 0 },
                         { 0.437460, -0.049080, 0.440200, 0 },
                         { 0.740680, 0.162480, 0.758300, 0 },
                         { -0.436570, -0.878730, 0.981210, 0 },
                         { 0.479810, -0.873530, 0.996630, 0 },
                         { 0.487030, 0.318400, 0.581880, 0 },
                         { 0.401350, -0.709820, 0.815430, 0 },
                         { -0.595490, 0.267930, 0.652990, 0 },
                         { 0.833570, 0.545130, 0.995990, 0 },
                         { -0.612100, 0.467470, 0.770190, 0 },
                         { -0.317650, 0.673280, 0.744450, 0 },
                         { -0.117250, -0.752340, 0.761430, 0 } };
  float4 r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = (uint2)v0.xy;
  r0.zw = float2(0, 0);
  r1.xyzw = mapInputTexture0L.Load(r0.xyw).xyzw;
  r1 = max(0, r1);

  r1 = max(0, r1);

  r2.xyzw = mapInputTexture1P.Load(r0.xyz).xyzw;

  r2 = max(0, r2);

  r0.z = max(r2.x, abs(r1.w));
  r0.w = cmp(0 < r0.z);
  if (r0.w != 0) {
    r0.xy = (int2)r0.xy & int2(15, 15);
    r0.y = (uint)r0.y << 4;
    r0.x = (int)r0.x | (int)r0.y;
    r0.y = r0.z + r0.z;
    r0.y = r0.y * r0.y;
    r0.y = 0.011061972 * r0.y;
    r0.y = min(1, r0.y);
    r0.y = log2(r0.y);
    r0.y = 0.649999976 * r0.y;
    r0.y = exp2(r0.y);
    r0.y = 71 * r0.y;
    r0.y = ceil(r0.y);
    r0.y = (uint)r0.y;
    r0.y = max(4, (uint)r0.y);
    r2.x = dot(float2(0.58296001, 0.619840026), icb[r0.x + 0].xy);
    r2.zw = icb[r0.x + 0].xy * float2(-1, 1);
    r2.y = dot(float2(0.619840026, 0.58296001), r2.zw);
    r2.xy = r2.xy * r0.zz;
    r3.xy = (int2)g_i2OutputSize.xy;
    r2.xy = r2.xy / r3.xy;
    r2.xy = v2.xy + r2.xy;
    r4.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r2.xy, 0).xyzw;

    r4 = max(0, r4);

    r2.x = dot(float2(0.370510012, -0.787050009), icb[r0.x + 0].xy);
    r2.y = dot(float2(-0.787050009, 0.370510012), r2.zw);
    r2.xy = r2.xy * r0.zz;
    r2.xy = r2.xy / r3.xy;
    r2.xy = v2.xy + r2.xy;
    r5.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r2.xy, 0).xyzw;

    r5 = max(0, r5);

    r2.x = dot(float2(-0.227909997, 0.414400011), icb[r0.x + 0].xy);
    r2.y = dot(float2(0.414400011, -0.227909997), r2.zw);
    r2.xy = r2.xy * r0.zz;
    r2.xy = r2.xy / r3.xy;
    r2.xy = v2.xy + r2.xy;
    r6.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r2.xy, 0).xyzw;

    r6 = max(0, r6);

    r2.x = dot(float2(-0.511720002, -0.418540001), icb[r0.x + 0].xy);
    r2.y = dot(float2(-0.418540001, -0.511720002), r2.zw);
    r2.xy = r2.xy * r0.zz;
    r2.xy = r2.xy / r3.xy;
    r2.xy = v2.xy + r2.xy;
    r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r2.xy, 0).xyzw;

    r7 = max(0, r7);

    r8.xyzw = float4(0.850899994, 0.869910002, 0.472939998, 0.661090016) * r0.zzzz;
    r0.w = cmp(abs(r4.w) >= r8.x);
    r9.z = r0.w ? 1.000000 : 0;
    r0.w = cmp(0 < r4.w);
    r2.x = abs(r1.w) / r4.w;
    r2.x = min(1, r2.x);
    r2.y = 0.333333343 * abs(r1.w);
    r3.z = 1 + -r2.x;
    r10.y = r2.y * r3.z + r2.x;
    r11.xyz = r10.yyy * r4.xyz;
    r12.xyz = r9.zzz * r4.xyz;
    r11.xyz = r0.www ? r11.xyz : 0;
    r12.xyz = r0.www ? float3(0, 0, 0) : r12.xyz;
    r10.z = 0;
    r9.y = 0;
    r9.yz = r0.ww ? r10.yz : r9.yz;
    r0.w = cmp(abs(r5.w) >= r8.y);
    r0.w = r0.w ? 1.000000 : 0;
    r2.x = cmp(0 < r5.w);
    r3.z = abs(r1.w) / r5.w;
    r3.z = min(1, r3.z);
    r3.w = 1 + -r3.z;
    r3.z = r2.y * r3.w + r3.z;
    r9.x = r9.y + r3.z;
    r10.xyz = r5.xyz * r3.zzz + r11.xyz;
    r9.w = r9.z + r0.w;
    r13.xyz = r5.xyz * r0.www + r12.xyz;
    r10.xyz = r2.xxx ? r10.xyz : r11.xyz;
    r11.xyz = r2.xxx ? r12.xyz : r13.xyz;
    r9.yz = r2.xx ? r9.xz : r9.yw;
    r4.xyz = r5.xyz + r4.xyz;
    r0.w = cmp(abs(r6.w) >= r8.z);
    r0.w = r0.w ? 1.000000 : 0;
    r2.x = cmp(0 < r6.w);
    r3.z = abs(r1.w) / r6.w;
    r3.z = min(1, r3.z);
    r3.w = 1 + -r3.z;
    r3.z = r2.y * r3.w + r3.z;
    r9.x = r9.y + r3.z;
    r5.xyz = r6.xyz * r3.zzz + r10.xyz;
    r9.w = r9.z + r0.w;
    r8.xyz = r6.xyz * r0.www + r11.xyz;
    r5.xyz = r2.xxx ? r5.xyz : r10.xyz;
    r8.xyz = r2.xxx ? r11.xyz : r8.xyz;
    r9.yz = r2.xx ? r9.xz : r9.yw;
    r4.xyz = r4.xyz + r6.xyz;
    r0.w = cmp(abs(r7.w) >= r8.w);
    r0.w = r0.w ? 1.000000 : 0;
    r2.x = cmp(0 < r7.w);
    r3.z = abs(r1.w) / r7.w;
    r3.z = min(1, r3.z);
    r3.w = 1 + -r3.z;
    r3.z = r2.y * r3.w + r3.z;
    r9.x = r9.y + r3.z;
    r6.xyz = r7.xyz * r3.zzz + r5.xyz;
    r9.w = r9.z + r0.w;
    r10.xyz = r7.xyz * r0.www + r8.xyz;
    r5.xyz = r2.xxx ? r6.xyz : r5.xyz;
    r6.xyz = r2.xxx ? r8.xyz : r10.xyz;
    r8.xz = r2.xx ? r9.xz : r9.yw;
    r4.xyz = r4.xyz + r7.xyz;
    r0.w = cmp(4 < (uint)r0.y);
    if (r0.w != 0) {
      r7.x = dot(float2(0.158570006, -0.00405000011), icb[r0.x + 0].xy);
      r7.y = dot(float2(-0.00405000011, 0.158570006), r2.zw);
      r3.zw = r7.xy * r0.zz;
      r3.zw = r3.zw / r3.xy;
      r3.zw = v2.xy + r3.zw;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r3.zw, 0).xyzw;

      r7 = max(0, r7);

      r9.x = dot(float2(0.454730004, -0.209769994), icb[r0.x + 0].xy);
      r9.y = dot(float2(-0.209769994, 0.454730004), r2.zw);
      r3.zw = r9.xy * r0.zz;
      r3.zw = r3.zw / r3.xy;
      r3.zw = v2.xy + r3.zw;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r3.zw, 0).xyzw;

      r9 = max(0, r9);

      r10.x = dot(float2(0.602150023, -0.49101001), icb[r0.x + 0].xy);
      r10.y = dot(float2(-0.49101001, 0.602150023), r2.zw);
      r3.zw = r10.xy * r0.zz;
      r3.zw = r3.zw / r3.xy;
      r3.zw = v2.xy + r3.zw;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r3.zw, 0).xyzw;

      r10 = max(0, r10);

      r11.x = dot(float2(-0.0454600006, 0.660520017), icb[r0.x + 0].xy);
      r11.y = dot(float2(0.660520017, -0.0454600006), r2.zw);
      r3.zw = r11.xy * r0.zz;
      r3.zw = r3.zw / r3.xy;
      r3.zw = v2.xy + r3.zw;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r3.zw, 0).xyzw;

      r11 = max(0, r11);

      r0.w = 0.15862 * r0.z;
      r0.w = cmp(abs(r7.w) >= r0.w);
      r0.w = r0.w ? 1.000000 : 0;
      r2.x = cmp(0 < r7.w);
      r3.z = abs(r1.w) / r7.w;
      r3.z = min(1, r3.z);
      r3.w = 1 + -r3.z;
      r3.z = r2.y * r3.w + r3.z;
      r8.y = r8.x + r3.z;
      r12.xyz = r7.xyz * r3.zzz + r5.xyz;
      r8.w = r8.z + r0.w;
      r13.xyz = r7.xyz * r0.www + r6.xyz;
      r5.xyz = r2.xxx ? r12.xyz : r5.xyz;
      r6.xyz = r2.xxx ? r6.xyz : r13.xyz;
      r8.xz = r2.xx ? r8.yz : r8.xw;
      r4.xyz = r7.xyz + r4.xyz;
      r7.xyz = cmp(int3(5, 6, 7) < (uint3)r0.yyy);
      if (r7.x != 0) {
        r0.w = 0.500779986 * r0.z;
        r0.w = cmp(abs(r9.w) >= r0.w);
        r0.w = r0.w ? 1.000000 : 0;
        r2.x = cmp(0 < r9.w);
        r3.z = abs(r1.w) / r9.w;
        r3.z = min(1, r3.z);
        r3.w = 1 + -r3.z;
        r3.z = r2.y * r3.w + r3.z;
        r8.y = r8.x + r3.z;
        r12.xyz = r9.xyz * r3.zzz + r5.xyz;
        r8.w = r8.z + r0.w;
        r13.xyz = r9.xyz * r0.www + r6.xyz;
        r5.xyz = r2.xxx ? r12.xyz : r5.xyz;
        r6.xyz = r2.xxx ? r6.xyz : r13.xyz;
        r8.xz = r2.xx ? r8.yz : r8.xw;
        r4.xyz = r4.xyz + r9.xyz;
        r0.w = 6;
      } else {
        r0.w = 5;
      }
      if (r7.y != 0) {
        r2.x = 0.776960015 * r0.z;
        r2.x = cmp(abs(r10.w) >= r2.x);
        r2.x = r2.x ? 1.000000 : 0;
        r3.z = cmp(0 < r10.w);
        r3.w = abs(r1.w) / r10.w;
        r3.w = min(1, r3.w);
        r4.w = 1 + -r3.w;
        r3.w = r2.y * r4.w + r3.w;
        r8.y = r8.x + r3.w;
        r7.xyw = r10.xyz * r3.www + r5.xyz;
        r8.w = r8.z + r2.x;
        r9.xyz = r10.xyz * r2.xxx + r6.xyz;
        r5.xyz = r3.zzz ? r7.xyw : r5.xyz;
        r6.xyz = r3.zzz ? r6.xyz : r9.xyz;
        r8.xz = r3.zz ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      if (r7.z != 0) {
        r2.x = 0.66207999 * r0.z;
        r2.x = cmp(abs(r11.w) >= r2.x);
        r2.x = r2.x ? 1.000000 : 0;
        r3.z = cmp(0 < r11.w);
        r3.w = abs(r1.w) / r11.w;
        r3.w = min(1, r3.w);
        r4.w = 1 + -r3.w;
        r3.w = r2.y * r4.w + r3.w;
        r8.y = r8.x + r3.w;
        r7.xyz = r11.xyz * r3.www + r5.xyz;
        r8.w = r8.z + r2.x;
        r9.xyz = r11.xyz * r2.xxx + r6.xyz;
        r5.xyz = r3.zzz ? r7.xyz : r5.xyz;
        r6.xyz = r3.zzz ? r6.xyz : r9.xyz;
        r8.xz = r3.zz ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
      r2.x = 8;
    } else {
      r0.w = 4;
      r2.x = 4;
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(-0.559759974, -0.135849997), icb[r0.x + 0].xy);
      r7.y = dot(float2(-0.135849997, -0.559759974), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;

      r7 = max(0, r7);

      r9.x = dot(float2(0.738560021, 0.102949999), icb[r0.x + 0].xy);
      r9.y = dot(float2(0.102949999, 0.738560021), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;

      r9 = max(0, r9);

      r10.x = dot(float2(0.449539989, 0.146430001), icb[r0.x + 0].xy);
      r10.y = dot(float2(0.146430001, 0.449539989), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;

      r10 = max(0, r10);

      r11.x = dot(float2(0.55448997, -0.785640001), icb[r0.x + 0].xy);
      r11.y = dot(float2(-0.785640001, 0.55448997), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;

      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.576009989 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.745700002 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.472790003 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.961610019 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.xz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(0.232859999, 0.266970009), icb[r0.x + 0].xy);
      r7.y = dot(float2(0.266970009, 0.232859999), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;

      r7 = max(0, r7);

      r9.x = dot(float2(0.922049999, -0.191080004), icb[r0.x + 0].xy);
      r9.y = dot(float2(-0.191080004, 0.922049999), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;

      r9 = max(0, r9);

      r10.x = dot(float2(-0.236589998, -0.56348002), icb[r0.x + 0].xy);
      r10.y = dot(float2(-0.56348002, -0.236589998), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;

      r10 = max(0, r10);

      r11.x = dot(float2(0.0269600004, -0.442270011), icb[r0.x + 0].xy);
      r11.y = dot(float2(-0.442270011, 0.0269600004), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;

      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.354259998 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.941649973 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.611129999 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.443089992 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.xz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(0.385610014, 0.658519983), icb[r0.x + 0].xy);
      r7.y = dot(float2(0.658519983, 0.385610014), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;

      r7 = max(0, r7);

      r9.x = dot(float2(-0.707700014, -0.302109987), icb[r0.x + 0].xy);
      r9.y = dot(float2(-0.302109987, -0.707700014), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;

      r9 = max(0, r9);

      r10.x = dot(float2(-0.675279975, -0.496289998), icb[r0.x + 0].xy);
      r10.y = dot(float2(-0.496289998, -0.675279975), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;

      r10 = max(0, r10);

      r11.x = dot(float2(0.82002002, -0.422899991), icb[r0.x + 0].xy);
      r11.y = dot(float2(-0.422899991, 0.82002002), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;

      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.763109982 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.769490004 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.838039994 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.922640026 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.xz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(-0.478119999, -0.717930019), icb[r0.x + 0].xy);
      r7.y = dot(float2(-0.717930019, -0.478119999), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;

      r7 = max(0, r7);

      r9.x = dot(float2(-0.21401, -0.0287299994), icb[r0.x + 0].xy);
      r9.y = dot(float2(-0.0287299994, -0.21401), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;

      r9 = max(0, r9);

      r10.x = dot(float2(0.133680001, -0.725239992), icb[r0.x + 0].xy);
      r10.y = dot(float2(-0.725239992, 0.133680001), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;

      r10 = max(0, r10);

      r11.x = dot(float2(-0.477050006, 0.409680009), icb[r0.x + 0].xy);
      r11.y = dot(float2(0.409680009, -0.477050006), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;

      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.862569988 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.21593 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.737460017 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.628820002 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.xz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(-0.734570026, 0.209700003), icb[r0.x + 0].xy);
      r7.y = dot(float2(0.209700003, -0.734570026), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;

      r7 = max(0, r7);

      r9.x = dot(float2(-0.142729998, 0.176339999), icb[r0.x + 0].xy);
      r9.y = dot(float2(0.176339999, -0.142729998), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;

      r9 = max(0, r9);

      r10.x = dot(float2(-0.996819973, -0.0663200021), icb[r0.x + 0].xy);
      r10.y = dot(float2(-0.0663200021, -0.996819973), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;

      r10 = max(0, r10);

      r11.x = dot(float2(-0.409770012, 0.577459991), icb[r0.x + 0].xy);
      r11.y = dot(float2(0.577459991, -0.409770012), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;

      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.763920009 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.22687 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.99901998 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.708079994 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.xz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(-0.311760008, 0.800019979), icb[r0.x + 0].xy);
      r7.y = dot(float2(0.800019979, -0.311760008), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;

      r7 = max(0, r7);

      r9.x = dot(float2(0.783630013, 0.285459995), icb[r0.x + 0].xy);
      r9.y = dot(float2(0.285459995, 0.783630013), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;

      r9 = max(0, r9);

      r10.x = dot(float2(0.108390003, 0.953450024), icb[r0.x + 0].xy);
      r10.y = dot(float2(0.953450024, 0.108390003), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;

      r10 = max(0, r10);

      r11.x = dot(float2(-0.135890007, -0.912039995), icb[r0.x + 0].xy);
      r11.y = dot(float2(-0.912039995, -0.135890007), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;

      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.858619988 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.834010005 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.959590018 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.922110021 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.xz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(-0.222990006, -0.308999985), icb[r0.x + 0].xy);
      r7.y = dot(float2(-0.308999985, -0.222990006), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;

      r7 = max(0, r7);

      r9.x = dot(float2(-0.90407002, -0.222289994), icb[r0.x + 0].xy);
      r9.y = dot(float2(-0.222289994, -0.90407002), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;

      r9 = max(0, r9);

      r10.x = dot(float2(0.439150006, 0.331220001), icb[r0.x + 0].xy);
      r10.y = dot(float2(0.331220001, 0.439150006), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;

      r10 = max(0, r10);

      r11.x = dot(float2(-0.715810001, 0.582350016), icb[r0.x + 0].xy);
      r11.y = dot(float2(0.582350016, -0.715810001), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;

      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.381060004 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.930989981 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.55005002 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.922779977 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.xz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(-0.506470025, 0.0593100004), icb[r0.x + 0].xy);
      r7.y = dot(float2(0.0593100004, -0.506470025), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;

      r7 = max(0, r7);

      r9.x = dot(float2(0.0510899983, 0.232999995), icb[r0.x + 0].xy);
      r9.y = dot(float2(0.232999995, 0.0510899983), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;

      r9 = max(0, r9);

      r10.x = dot(float2(-0.855480015, 0.0689999983), icb[r0.x + 0].xy);
      r10.y = dot(float2(0.0689999983, -0.855480015), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;

      r10 = max(0, r10);

      r11.x = dot(float2(-0.0022799999, -0.204769999), icb[r0.x + 0].xy);
      r11.y = dot(float2(-0.204769999, -0.0022799999), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;

      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.509940028 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.238529995 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.858259976 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.204779997 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.xz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(0.37154001, -0.442710012), icb[r0.x + 0].xy);
      r7.y = dot(float2(-0.442710012, 0.37154001), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;

      r7 = max(0, r7);

      r9.x = dot(float2(-0.300209999, -0.830060005), icb[r0.x + 0].xy);
      r9.y = dot(float2(-0.830060005, -0.300209999), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;

      r9 = max(0, r9);

      r10.x = dot(float2(0.655550003, -0.105250001), icb[r0.x + 0].xy);
      r10.y = dot(float2(-0.105250001, 0.655550003), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;

      r10 = max(0, r10);

      r11.x = dot(float2(0.11902, 0.558539987), icb[r0.x + 0].xy);
      r11.y = dot(float2(0.558539987, 0.11902), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;

      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.577960014 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.882690012 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.663940012 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.571080029 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.xz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(-0.334470004, 0.243499994), icb[r0.x + 0].xy);
      r7.y = dot(float2(0.243499994, -0.334470004), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;

      r7 = max(0, r7);

      r9.x = dot(float2(-0.100709997, -0.708220005), icb[r0.x + 0].xy);
      r9.y = dot(float2(-0.708220005, -0.100709997), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;

      r9 = max(0, r9);

      r10.x = dot(float2(0.190009996, -0.907999992), icb[r0.x + 0].xy);
      r10.y = dot(float2(-0.907999992, 0.190009996), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;

      r10 = max(0, r10);

      r11.x = dot(float2(-0.937709987, 0.23105), icb[r0.x + 0].xy);
      r11.y = dot(float2(0.23105, -0.937709987), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;

      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.413720012 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.715340018 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.927670002 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.965759993 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.xz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(-0.21243, 0.958949983), icb[r0.x + 0].xy);
      r7.y = dot(float2(0.958949983, -0.21243), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;

      r7 = max(0, r7);

      r9.x = dot(float2(0.725139976, 0.471969992), icb[r0.x + 0].xy);
      r9.y = dot(float2(0.471969992, 0.725139976), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;

      r9 = max(0, r9);

      r10.x = dot(float2(0.948620021, 0.212960005), icb[r0.x + 0].xy);
      r10.y = dot(float2(0.212960005, 0.948620021), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;

      r10 = max(0, r10);

      r11.x = dot(float2(0.323909998, 0.884739995), icb[r0.x + 0].xy);
      r11.y = dot(float2(0.884739995, 0.323909998), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;
      
      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.982200027 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.865199983 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.972230017 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.942170024 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.xz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(0.227699995, -0.286139995), icb[r0.x + 0].xy);
      r7.y = dot(float2(-0.286139995, 0.227699995), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;
      
      r7 = max(0, r7);

      r9.x = dot(float2(0.917429984, 0.00478000008), icb[r0.x + 0].xy);
      r9.y = dot(float2(0.00478000008, 0.917429984), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;
      
      r9 = max(0, r9);

      r10.x = dot(float2(-0.53846997, 0.837339997), icb[r0.x + 0].xy);
      r10.y = dot(float2(0.837339997, -0.53846997), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;
      
      r10 = max(0, r10);

      r11.x = dot(float2(0.358850002, -0.0244100001), icb[r0.x + 0].xy);
      r11.y = dot(float2(-0.0244100001, 0.358850002), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;
      
      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.365689993 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.917450011 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.995530009 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.359679997 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.xz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(0.736379981, -0.62134999), icb[r0.x + 0].xy);
      r7.y = dot(float2(-0.62134999, 0.736379981), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;
      
      r7 = max(0, r7);

      r9.x = dot(float2(-0.396690011, -0.229599997), icb[r0.x + 0].xy);
      r9.y = dot(float2(-0.229599997, -0.396690011), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;
      
      r9 = max(0, r9);

      r10.x = dot(float2(-0.715799987, -0.674510002), icb[r0.x + 0].xy);
      r10.y = dot(float2(-0.674510002, -0.715799987), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;
      
      r10 = max(0, r10);

      r11.x = dot(float2(-0.0307999998, -0.00800999999), icb[r0.x + 0].xy);
      r11.y = dot(float2(-0.00800999999, -0.0307999998), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;
      
      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.963500023 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.458350003 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.983529985 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.0318199992 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.xz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(-0.0490799993, 0.437460005), icb[r0.x + 0].xy);
      r7.y = dot(float2(0.437460005, -0.0490799993), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;
      
      r7 = max(0, r7);

      r9.x = dot(float2(0.162479997, 0.740679979), icb[r0.x + 0].xy);
      r9.y = dot(float2(0.740679979, 0.162479997), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;
      
      r9 = max(0, r9);

      r10.x = dot(float2(-0.878729999, -0.436569989), icb[r0.x + 0].xy);
      r10.y = dot(float2(-0.436569989, -0.878729999), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;
      
      r10 = max(0, r10);

      r11.x = dot(float2(-0.873529971, 0.479809999), icb[r0.x + 0].xy);
      r11.y = dot(float2(0.479809999, -0.873529971), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;
      
      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.440200001 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.758300006 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.981209993 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.996630013 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.xz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
      }
    }
    r3.z = cmp((uint)r2.x < (uint)r0.y);
    if (r3.z != 0) {
      r7.x = dot(float2(0.318399996, 0.487029999), icb[r0.x + 0].xy);
      r7.y = dot(float2(0.487029999, 0.318399996), r2.zw);
      r7.xy = r7.xy * r0.zz;
      r7.xy = r7.xy / r3.xy;
      r7.xy = v2.xy + r7.xy;
      r7.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r7.xy, 0).xyzw;
      
      r7 = max(0, r7);

      r9.x = dot(float2(-0.709819973, 0.401349992), icb[r0.x + 0].xy);
      r9.y = dot(float2(0.401349992, -0.709819973), r2.zw);
      r9.xy = r9.xy * r0.zz;
      r9.xy = r9.xy / r3.xy;
      r9.xy = v2.xy + r9.xy;
      r9.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r9.xy, 0).xyzw;
      
      r9 = max(0, r9);

      r10.x = dot(float2(0.267930001, -0.595489979), icb[r0.x + 0].xy);
      r10.y = dot(float2(-0.595489979, 0.267930001), r2.zw);
      r10.xy = r10.xy * r0.zz;
      r10.xy = r10.xy / r3.xy;
      r10.xy = v2.xy + r10.xy;
      r10.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r10.xy, 0).xyzw;
      
      r10 = max(0, r10);

      r11.x = dot(float2(0.545130014, 0.833570004), icb[r0.x + 0].xy);
      r11.y = dot(float2(0.833570004, 0.545130014), r2.zw);
      r11.xy = r11.xy * r0.zz;
      r11.xy = r11.xy / r3.xy;
      r11.xy = v2.xy + r11.xy;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r11.xy, 0).xyzw;
      
      r11 = max(0, r11);

      r3.w = (int)r2.x | 1;
      if (r3.z != 0) {
        r3.z = 0.581879973 * r0.z;
        r3.z = cmp(abs(r7.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r7.w);
        r5.w = abs(r1.w) / r7.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r12.xyz = r7.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r13.xyz = r7.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r12.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r13.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r7.xyz + r4.xyz;
      }
      r3.z = (int)r3.w + 1;
      r3.w = cmp((uint)r3.w < (uint)r0.y);
      if (r3.w != 0) {
        r3.w = 0.815429986 * r0.z;
        r3.w = cmp(abs(r9.w) >= r3.w);
        r3.w = r3.w ? 1.000000 : 0;
        r4.w = cmp(0 < r9.w);
        r5.w = abs(r1.w) / r9.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r9.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.w;
        r12.xyz = r9.xyz * r3.www + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r12.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r9.xyz;
      }
      r3.w = (int)r3.z | 3;
      r3.z = cmp((uint)r3.z < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.652989984 * r0.z;
        r3.z = cmp(abs(r10.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r4.w = cmp(0 < r10.w);
        r5.w = abs(r1.w) / r10.w;
        r5.w = min(1, r5.w);
        r6.w = 1 + -r5.w;
        r5.w = r2.y * r6.w + r5.w;
        r8.y = r8.x + r5.w;
        r7.xyz = r10.xyz * r5.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r10.xyz * r3.zzz + r6.xyz;
        r5.xyz = r4.www ? r7.xyz : r5.xyz;
        r6.xyz = r4.www ? r6.xyz : r9.xyz;
        r8.xz = r4.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r10.xyz;
      }
      r2.x = (int)r3.w + 1;
      r3.z = cmp((uint)r3.w < (uint)r0.y);
      if (r3.z != 0) {
        r3.z = 0.995989978 * r0.z;
        r3.z = cmp(abs(r11.w) >= r3.z);
        r3.z = r3.z ? 1.000000 : 0;
        r3.w = cmp(0 < r11.w);
        r4.w = abs(r1.w) / r11.w;
        r4.w = min(1, r4.w);
        r5.w = 1 + -r4.w;
        r4.w = r2.y * r5.w + r4.w;
        r8.y = r8.x + r4.w;
        r7.xyz = r11.xyz * r4.www + r5.xyz;
        r8.w = r8.z + r3.z;
        r9.xyz = r11.xyz * r3.zzz + r6.xyz;
        r5.xyz = r3.www ? r7.xyz : r5.xyz;
        r6.xyz = r3.www ? r6.xyz : r9.xyz;
        r8.yz = r3.ww ? r8.yz : r8.xw;
        r0.w = 1 + r0.w;
        r4.xyz = r4.xyz + r11.xyz;
        r8.xz = r8.yz;
      }
    }
    r7.xyz = r5.xyz;
    r9.xyz = r6.xyz;
    r10.xyz = r4.xyz;
    r3.zw = r8.xz;
    r4.w = r0.w;
    r5.w = r2.x;
    while (true) {
      r6.w = cmp((uint)r5.w >= (uint)r0.y);
      if (r6.w != 0) break;
      r11.x = dot(icb[r5.w + 256].yx, icb[r0.x + 0].xy);
      r11.y = dot(icb[r5.w + 256].xy, r2.zw);
      r8.yw = r11.xy * r0.zz;
      r8.yw = r8.yw / r3.xy;
      r8.yw = v2.xy + r8.yw;
      r11.xyzw = mapInputTexture0L.SampleLevel(samplerInputTexture0L_s, r8.yw, 0).xyzw;
      
      r11 = max(0, r11);

      r6.w = icb[r5.w + 256].z * r0.z;
      r6.w = cmp(abs(r11.w) >= r6.w);
      r6.w = r6.w ? 1.000000 : 0;
      r7.w = cmp(0 < r11.w);
      r8.y = abs(r1.w) / r11.w;
      r8.y = min(1, r8.y);
      r8.w = 1 + -r8.y;
      r8.y = r2.y * r8.w + r8.y;
      r12.x = r8.y + r3.z;
      r13.xyz = r11.xyz * r8.yyy + r7.xyz;
      r14.y = r6.w + r3.w;
      r15.xyz = r11.xyz * r6.www + r9.xyz;
      r7.xyz = r7.www ? r13.xyz : r7.xyz;
      r9.xyz = r7.www ? r9.xyz : r15.xyz;
      r12.y = r3.w;
      r14.x = r3.z;
      r3.zw = r7.ww ? r12.xy : r14.xy;
      r4.w = 1 + r4.w;
      r10.xyz = r11.xyz + r10.xyz;
      r5.w = (int)r5.w + 1;
    }
    r0.x = (uint)r0.y;
    r0.y = max(0.00100000005, r3.w);
    r0.yzw = r9.xyz / r0.yyy;
    r2.x = r3.w / r0.x;
    r0.x = 0.5 * r0.x;
    r2.y = max(0.00100000005, r3.z);
    r2.yzw = r7.xyz / r2.yyy;
    r0.x = r3.z / r0.x;
    r3.xyz = r10.xyz / r4.www;
    r3.w = saturate(r1.w * -10 + -r2.x);
    r3.w = max(r3.w, r2.x);
    r4.x = r3.w + r3.w;
    r3.xyz = r4.xxx * r3.xyz;
    r3.w = r3.w * 2 + r2.x;
    r4.x = cmp(0 < r2.x);
    r4.y = cmp(r1.w < 0);
    r4.x = (int)r4.y | (int)r4.x;
    r4.x = r4.x ? 1.000000 : 0;
    o0.w = saturate(r0.x * r4.x + r3.w);
    r0.yzw = r0.yzw * r2.xxx + r3.xyz;
    r2.xyz = r2.yzw * r0.xxx + r0.yzw;
    r2.w = r3.w + r0.x;
    r0.x = cmp(0 >= r2.w);
    r1.w = 1;
    r0.xyzw = r0.xxxx ? r1.xyzw : r2.xyzw;
    o0.xyz = r0.xyz / r0.www;
    return;
  } else {
    o0.xyz = r1.xyz;
    o0.w = 0;
    return;
  }
  return;
}
